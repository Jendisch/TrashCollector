@model IEnumerable<TrashCollector.Models.ApplicationUser>

@*Inherits="System.Web.Mvc.ViewPage*@

<!DOCTYPE html>
<html>
<head>
    
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        #map {
            height: 500px;
            width: 700px;
            /*margin: 50px;
             padding-top: 30px;*/
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 500px;
            margin: 10px;
            padding: 10px;
        }
    </style>
</head>
<body>
<h2>Today's Pickups</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Line1Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Line1Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            @*<td>
                    @Html.ActionLink("View on Map", "", "") |
                </td>*@
        </tr>
    }
    <tr>
        <td>
            @Html.ActionLink("Back", "Index", "Users") |
        </td>
    </tr>
</table>
<hr />
<br />

<div id="map"></div>
<div id="directions-panel"></div>

<script>
        var geocoder;
        var map;
        var directionsDisplay;
        var directionsService;
        var stepDisplay;
        var pickups = @Html.Raw(Json.Encode(Model));
        var waypts = [];
        function initMap() {
            geocoder = new google.maps.Geocoder();
            directionsService = new google.maps.DirectionsService;
            directionsDisplay = new google.maps.DirectionsRenderer;
            var latlng = new google.maps.LatLng(43.0389, -87.9065);
            var mapOptions = {
                center: latlng,
                zoom: 13,
            };
            map = new google.maps.Map(document.getElementById("map"), mapOptions);
            directionsDisplay.setMap(map);
            codeAddress();
            calculateAndDisplayRoute();
        }

        function codeAddress() {
            for(var i = 0; i < pickups.length; i++){
                var address = pickups[i].StreetAddress + " " + pickups[i].City + " " + pickups[i].State + " " + pickups[i].ZipCode;
                waypts.push({
                    location: address,
                    stopover: true
                });
                geocoder.geocode( { 'address': address}, function(results, status) {
                    if (status == 'OK') {
                        map.setCenter(results[0].geometry.location);
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location,
                            animation: google.maps.Animation.DROP
                        });
                    } else {
                        alert('Geocode was not successful.');
                    }
                });
            }
        }

        function calculateAndDisplayRoute() {
            console.log(waypts);
            directionsService.route({
                origin: "333 N Plankinton Ave Milwaukee WI 53202",
                destination: "333 n plankinton ave Milwaukee, wi 53202",
                waypoints: waypts,
                optimizeWaypoints: true,
                travelMode: 'DRIVING'
            }, function(response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                    var route = response.routes[0];
                    var summaryPanel = document.getElementById('directions-panel');
                    summaryPanel.innerHTML = '';
                    for (var i = 0; i < route.legs.length; i++) {
                        var routeSegment = i + 1;
                        summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                            '</b><br>';
                        summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                        summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                        summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                    }
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }


        @*<div id="map"></div>
        <script>
            var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: 43.034, lng: -87.911 },
                    zoom: 12
                });
            }*@
</script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB75pBB0awnpqlNbscw8mhSvoRJdnIIQEA&callback=initMap"
                async defer></script>
</body>
</html>
